import io.github.fvarrui.javapackager.gradle.PackageTask
import io.github.fvarrui.javapackager.model.Platform
import io.github.fvarrui.javapackager.model.WindowsExeCreationTool

buildscript {
    def currentPlatFormFlag = "mac"
    def javaPackagerVersion = "1.6.3"
    if (currentPlatFormFlag == "window") {
        //the library can't match JVM location on 1.6.3, and can't macOS signature on 1.6.4
        javaPackagerVersion = "1.6.4"
    }
    dependencies {
        classpath "io.github.fvarrui:javapackager:$javaPackagerVersion"
    }
}

plugins {
    id 'java'
    id 'application'
    id 'org.jetbrains.kotlin.jvm' version '1.5.31'
    id 'org.openjfx.javafxplugin' version '0.0.10'
    id 'org.beryx.jlink' version '2.24.1'
}

apply plugin: 'io.github.fvarrui.javapackager.plugin'
group 'com.kevin'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.8.1'
}

sourceCompatibility = '16'
targetCompatibility = '16'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.kevin.javafxdemo2'
    mainClass = 'com.kevin.javafxdemo2.HelloApplicationKt'
}

[compileKotlin, compileTestKotlin].forEach {
    it.kotlinOptions {
        jvmTarget = '11'
    }
}

javafx {
    version = '16'
    modules = ['javafx.controls', 'javafx.fxml']
}

task fatJar(type: Jar) {
    archiveClassifier = 'uber'
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from sourceSets.main.output
    dependsOn configurations.runtimeClasspath
    manifest {
        attributes 'Main-Class': 'com.kevin.javafxdemo2.HelloApplicationKt'
        attributes 'Multi-Release': 'true'
    }
    from {
        configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
    }
}

task packageMyApp(type: PackageTask, dependsOn: fatJar) {

    def currentPlatFormFlag = "mac"
    def currentPlatform
    if (currentPlatFormFlag == "window") {
        currentPlatform = Platform.windows
    } else {
        currentPlatform = Platform.mac
    }

    appName = "KevinDemo"
    displayName = "KevinDemo"
    version = "1.0.0"
    platform = currentPlatform
    mainClass = 'com.kevin.javafxdemo2.HelloApplicationKt'
    bundleJre = false
    customizedJre = false
    generateInstaller = true
    vmArgs = ["-Dprism.maxvram=2g -XX:MaxGCPauseMillis=500 -Xms2g -XX:+AlwaysPreTouch"]
    runnableJar = file("$buildDir/libs/JavaFXDemo2-1.0-SNAPSHOT-uber.jar")
    copyDependencies = true
    administratorRequired = false
    winConfig {
        generateSetup = true
        generateMsi = true
        disableDirPage = false
        disableProgramGroupPage = false
        disableFinishedPage = false
        disableRunAfterInstall = false
        exeCreationTool = WindowsExeCreationTool.winrun4j
    }
    macConfig {
        appId = "com.kevin.desktop"
        generateDmg = true
        generatePkg = true
        developerId = "Kevin Xu Tech"
    }
}